#------Experiments to test (separated with commas)-----
# maximum likelihood values extracted from KV450 public MCMC chain
data.experiments=['kv450_cf_likelihood_public']

#------ Settings for the over-sampling. The first element will always be set to
# 1, for it is the sampling of the cosmological parameters. The other numbers
# describe the over sampling of the nuisance parameter space. This array must
# have the same dimension as the number of blocks in your run (so, 1 for
# cosmological parameters, and then 1 for each experiment with varying nuisance
# parameters).
#data.over_sampling=[1, 4]

#------ Parameter list -------

# data.parameters[class name] = [mean, min, max, 1-sigma, scale, role]
# - if min max irrelevant, put to -1
# - if fixed, put 1-sigma to 0
# - if scale irrelevant, put to 1, otherwise to the appropriate factor
# - role is either 'cosmo' or 'nuisance'

# Cosmological parameters list
# main parameters to extract:

data.parameters['omega_cdm']    = [5.74881700e-02,   5.74881700e-02, 5.74881700e-029, 0.0027,    1, 'cosmo']
data.parameters['ln10^{10}A_s'] = [4.69733100e+00,   4.69733100e+00, 4.69733100e+00, 0.0029,    1, 'cosmo']
data.parameters['omega_b']      = [2.19527000e-02,  2.19527000e-02, 2.19527000e-02, 0.028,  1, 'cosmo']
data.parameters['n_s']          = [1.12807100e+00,   1.12807100e+00, 1.12807100e+00, 0.0074,    1, 'cosmo']
data.parameters['h']            = [7.80130100e-01,     7.80130100e-01,   7.80130100e-01,   0.0065, 1, 'cosmo']

# Nuisance parameters:

# amplitude for intrinsic alignments (IA):
data.parameters['A_IA'] = [4.94014400e-01, 4.94014400e-01, 4.94014400e-01, 1.0, 1, 'nuisance']

# amplitude for baryon feedback with 'halofit':
#data.parameters['A_bary'] = [0.75, 0.5, 1., 0.5, 1, 'nuisance']

# parameters for baryon feedback with 'hmcode':
data.parameters['c_min'] = [2.18854200e+00, 2.18854200e+00, 2.18854200e+00, 1., 1, 'cosmo']
#data.parameters['eta_0'] = [0.7, 0.59, 0.81, 1., 1, 'cosmo']

# nuisance parameters for c-correction:
data.parameters['dc'] = [2.57561000e-05, 2.57561000e-05, 2.57561000e-05, 0.0002, 1, 'nuisance']
data.parameters['Ac'] = [1.14268100e+00, 1.14268100e+00, 1.14268100e+00, 0.13, 1, 'nuisance']

### Delta-z parameters ###
data.parameters['D_z1'] = [ -6.03154500e-03, -6.03154500e-03, -6.03154500e-03, 0.01, 1, 'nuisance']
data.parameters['D_z2'] = [ 1.34960300e-03, 1.34960300e-03, 1.34960300e-03, 0.01, 1, 'nuisance']
data.parameters['D_z3'] = [ 2.61900700e-0, 2.61900700e-0, 2.61900700e-0, 0.01, 1, 'nuisance']
data.parameters['D_z4'] = [ -1.55141100e-03, -1.55141100e-03, -1.55141100e-03, 0.01, 1, 'nuisance']
data.parameters['D_z5'] = [ 3.09562400e-03, 3.09562400e-03, 3.09562400e-03, 3.09562400e-03, 1, 'nuisance']

# Derived parameters:

data.parameters['Omega_m']      = [1, None, None, 0, 1, 'derived']
data.parameters['sigma8']       = [1, None, None, 0, 1, 'derived']

# Other cosmo parameters (fixed parameters, precision parameters, etc.)

# fix main cosmology to Planck:
data.cosmo_arguments['Omega_k'] = 0.

# The base model features two massless
# and one massive neutrino with m=0.06eV.
# The settings below ensures that these
# three species contribute equally
# to the radiation density at large
# redshift, with a total of Neff=3.046
data.cosmo_arguments['N_eff'] = 2.0328
data.cosmo_arguments['N_ncdm'] = 1
data.cosmo_arguments['m_ncdm'] = 0.06
data.cosmo_arguments['T_ncdm'] = 0.71611

# standard BBN prediction of the primordial Helium abundance $Y_p$:
data.cosmo_arguments['sBBN file'] = data.path['cosmo']+'/bbn/sBBN.dat'
data.cosmo_arguments['k_pivot'] = 0.05

# only needed for regular MCMC:
data.write_step = 1
